	    SUMMARY OF THE HDF5 CONFIGURATION
	    =================================

General Information:
-------------------
                   HDF5 Version: 1.10.4
                  Configured on: Fri Dec 21 23:59:38 GMT 2018
                  Configured by: travis@Traviss-Mac-80.local
                    Host system: x86_64-apple-darwin13.4.0
              Uname information: Darwin Traviss-Mac-80.local 17.4.0 Darwin Kernel Version 17.4.0: Sun Dec 17 09:19:54 PST 2017; root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64
                       Byte sex: little-endian
             Installation point: /opt/anaconda1anaconda2anaconda3

Compiling Options:
------------------
                     Build Mode: production
              Debugging Symbols: no
                        Asserts: no
                      Profiling: no
             Optimization Level: high

Linking Options:
----------------
                      Libraries: static, shared
  Statically Linked Executables: 
                        LDFLAGS: -Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/opt/anaconda1anaconda2anaconda3/lib -L/opt/anaconda1anaconda2anaconda3/lib
                     H5_LDFLAGS:  -Wl,-commons,use_dylibs
                     AM_LDFLAGS:  -L/opt/anaconda1anaconda2anaconda3/lib
                Extra libraries: -lpthread -lz -ldl -lm 
                       Archiver: /Users/travis/miniconda3/conda-bld/hdf5_1545436665518/_build_env/bin/x86_64-apple-darwin13.4.0-ar
                       AR_FLAGS: cr
                         Ranlib: /Users/travis/miniconda3/conda-bld/hdf5_1545436665518/_build_env/bin/x86_64-apple-darwin13.4.0-ranlib

Languages:
----------
                              C: yes
                     C Compiler: /Users/travis/miniconda3/conda-bld/hdf5_1545436665518/_build_env/bin/x86_64-apple-darwin13.4.0-clang
                       CPPFLAGS: -D_FORTIFY_SOURCE=2 -mmacosx-version-min=10.9
                    H5_CPPFLAGS:   -DNDEBUG -UH5_DEBUG_API
                    AM_CPPFLAGS:  -I/opt/anaconda1anaconda2anaconda3/include
                        C Flags: -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -I/opt/anaconda1anaconda2anaconda3/include -fdebug-prefix-map=${SRC_DIR}=/usr/local/src/conda/${PKG_NAME}-${PKG_VERSION} -fdebug-prefix-map=${PREFIX}=/usr/local/src/conda-prefix
                     H5 C Flags:     
                     AM C Flags: 
               Shared C Library: yes
               Static C Library: yes


                        Fortran: yes
               Fortran Compiler: /Users/travis/miniconda3/conda-bld/hdf5_1545436665518/_build_env/bin/x86_64-apple-darwin13.4.0-gfortran ( GNU Fortran (GCC) 4.8.5)
                  Fortran Flags: 
               H5 Fortran Flags:  -pedantic -Wall -Wextra -Wunderflow -Wimplicit-interface -Wsurprising -Wno-c-binding-type  -s -O2
               AM Fortran Flags: 
         Shared Fortran Library: no
         Static Fortran Library: yes

                            C++: yes
                   C++ Compiler: /Users/travis/miniconda3/conda-bld/hdf5_1545436665518/_build_env/bin/x86_64-apple-darwin13.4.0-clang++
                      C++ Flags: -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -I/opt/anaconda1anaconda2anaconda3/include -fdebug-prefix-map=${SRC_DIR}=/usr/local/src/conda/${PKG_NAME}-${PKG_VERSION} -fdebug-prefix-map=${PREFIX}=/usr/local/src/conda-prefix
                   H5 C++ Flags:    
                   AM C++ Flags: 
             Shared C++ Library: yes
             Static C++ Library: yes

                           Java: no


Features:
---------
                   Parallel HDF5: no
Parallel Filtered Dataset Writes: no
              Large Parallel I/O: no
              High-level library: yes
                    Threadsafety: yes
             Default API mapping: v110
  With deprecated public symbols: yes
          I/O filters (external): deflate(zlib)
                             MPE: no
                      Direct VFD: no
                         dmalloc: no
  Packages w/ extra debug output: none
                     API tracing: no
            Using memory checker: yes
 Memory allocation sanity checks: no
             Metadata trace file: no
          Function stack tracing: no
       Strict file format checks: no
    Optimization instrumentation: no
